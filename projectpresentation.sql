
--OBJECTIVES 
--Analyze daily profitablility trend 
--Access customer satisfaction
--Most frequent payment method
--Evaluate product performance & customer loyalty
--Analyze conversion rates across marketing channels
--Understand revenue generation by customer demographics

--DATA DRIVEN QUESTIONS
--Q1: What is profit generated by days of the week ?,
--month-year profit trend,
--weekends vs weekdays,
--Which product generates the most profit ?
--Which customer segment generates most profit ?

--Q2:what is the total positive,negative and neutral feedbacks 
--how many customers never gave feedbacks
--which customer segments is assocaiated with the most positive feedbacks

--Q3: what is the most preffered payment method

--Q4: which products are frequently associated with good feedbacks scores and repeat purchases
--Unique/Loyal Customers

--Q5: Which marketing campaigns delivered the highest ROI ?
--Which channels have the best conversion rates?
--How has marketing ROI changed over time?

--Q6: Customer demography with the highest generated revenue


--Analyze Profitablility trend 
--Q1: What is profit generated by days of the week?
SELECT 
DATENAME(weekday,o.order_date) days_of_week,
SUM(oi.unit_price * oi.quantity * (p.margin_percentage/100.0)) profit
FROM blinkit_order_items oi
JOIN blinkit_orders o ON oi.order_id = o.order_id
JOIN blinkit_product_table p
ON p.product_id = oi.product_id
GROUP BY DATENAME(weekday,o.order_date) 
ORDER BY  profit DESC

--Month-year profit trend
SELECT 
YEAR(o.order_date) year,
DATENAME(MONTH, o.order_date) month,
MONTH(o.order_date) month_number,
SUM(oi.unit_price * oi.quantity * (p.margin_percentage/100.0)) profit
FROM blinkit_order_items oi
JOIN blinkit_orders o ON oi.order_id = o.order_id
JOIN blinkit_product_table p
ON p.product_id = oi.product_id
WHERE YEAR(o.order_date) IN(2023,2024)
GROUP BY DATENAME(MONTH, o.order_date),YEAR(o.order_date),MONTH(o.order_date)
ORDER BY  year,month_number;

--weekends vs weekdays
SELECT 
CASE
WHEN
DATENAME(weekday, o.order_date) IN('saturday','sunday') THEN 'weekend'
ELSE 'weekday'
END day_type,
SUM(oi.unit_price * oi.quantity * (p.margin_percentage/100.0)) profit
FROM blinkit_order_items oi
JOIN blinkit_orders o ON oi.order_id = o.order_id
JOIN blinkit_product_table p
ON p.product_id = oi.product_id
GROUP BY 
CASE
WHEN
DATENAME(weekday, o.order_date) IN('saturday','sunday') THEN 'weekend'
ELSE 'weekday'
END;

--Which product generates the most profit
SELECT 
p.product_name, p.category,
SUM(oi.unit_price * oi.quantity * (p.margin_percentage/100.0)) profit
FROM blinkit_order_items oi
JOIN blinkit_orders o ON oi.order_id = o.order_id
JOIN blinkit_product_table p
ON p.product_id = oi.product_id
GROUP BY p.product_name,p.category
ORDER BY  profit DESC;

--Which customer segment generates the most profit ?
SELECT 
c.customer_segment,
SUM(oi.unit_price * oi.quantity * (p.margin_percentage/100.0)) profit
FROM customer_table c
JOIN blinkit_orders o ON o.customer_id= c.customer_id
JOIN blinkit_order_items oi
ON oi.order_id= o.order_id
JOIN blinkit_product_table p
ON p.product_id = oi.product_id
GROUP BY c.customer_segment
ORDER BY  profit DESC;

---Access customer satisfaction
--Q2:what is the total positive,negative and neutral feedbacks 
SELECT
SUM(CASE WHEN cf.sentiment = 'positive' THEN 1 ELSE 0 END) AS positive_feedbacks,
SUM(CASE WHEN cf.sentiment = 'neutral' THEN 1 ELSE 0 END) AS neutral_feedbacks,
SUM(CASE WHEN cf.sentiment = 'negative' THEN 1 ELSE 0 END) AS negative_feedbacks,
COUNT(cf.feedback_id) AS total_feedbacks
FROM blinkit_customer_feedback cf

--how many customers never gave feedbacks
SELECT COUNT(DISTINCT c.customer_id) customer_with_no_feedback
FROM customer_table c
LEFT JOIN blinkit_customer_feedback cf ON c.customer_id = cf.customer_id
WHERE cf.feedback_id IS NULL

--which customer segement is assocaited with the most positive feedback
SELECT DISTINCT c.customer_segment,SUM(CASE WHEN cf.sentiment = 'positive' THEN 1 ELSE 0 END) positive_feedback
FROM customer_table c
JOIN blinkit_customer_feedback cf
ON c.customer_id =cf.customer_id
GROUP BY c.customer_segment
ORDER BY positive_feedback

--Most frequent payment method
--Q3: what is the most preffered payment method
SELECT o.payment_method,
COUNT(o.order_id) AS total_orders
FROM blinkit_orders o
GROUP BY o.payment_method
ORDER BY total_orders DESC;

--Evaluate product performance & customer loyalty
--Q4: which products are frequently associated with good feedbacks scores and repeat purchases
SELECT p.product_name,SUM(CASE WHEN cf.sentiment ='positive' THEN 1 ELSE 0 END) positive_feedbacks
FROM blinkit_product_table p
JOIN blinkit_order_items oi
ON oi.product_id = p.product_id
JOIN blinkit_orders o
ON o.order_id =oi.order_id
JOIN blinkit_customer_feedback cf
ON cf.customer_id = o.customer_id
WHERE cf.rating_label IN ('Excellent','very good')
GROUP BY p.product_name
ORDER BY positive_feedbacks DESC;

--Unique customers
SELECT p.product_id,p.product_name,
COUNT(DISTINCT o.customer_id) AS unique_customers,
COUNT(oi.order_id) AS total_orders
FROM blinkit_product_table p
JOIN blinkit_order_items oi ON p.product_id = oi.product_id
JOIN blinkit_orders o ON oi.order_id = o.order_id
GROUP BY p.product_id,p.product_name
ORDER BY  total_orders DESC;

--Loyal Customers
SELECT
COUNT(DISTINCT o.customer_id) AS Return_customers
FROM blinkit_orders o
WHERE o.customer_id IN(SELECT o.customer_id
FROM blinkit_orders o
GROUP BY o.customer_id
HAVING COUNT(o.order_id) >1)

--Analyze conversion rates across marketing channels
--Q5: Which marketing campaigns delivered the highest Return of investment (ROI) ?
SELECT mp.campaign_name, (SUM(mp.revenue_generated) - SUM(mp.spend))/SUM(mp.spend) roi
FROM blinkit_marketing_performance mp
GROUP BY mp.campaign_name 
ORDER BY roi

--Which channels have the best conversion rates?
SELECT mp.channel, (SUM(mp.conversions) *1.0/SUM(mp.clicks)) *100 conversion_rate
FROM blinkit_marketing_performance mp
GROUP BY mp.channel
ORDER BY conversion_rate DESC

--How has marketing ROI changed over time?
SELECT mp.date,(SUM(mp.revenue_generated) - SUM(mp.spend))/SUM(mp.spend) roi
FROM blinkit_marketing_performance mp
GROUP BY mp.date
ORDER BY roi

--Understand revenue generation by customer demographics
--what are the top areas and picodes with high revenue
SELECT c.area,c.pincode,SUM(oi.unit_price* oi.quantity) revenue
FROM customer_table c
JOIN blinkit_orders o
ON o.customer_id = c.customer_id
JOIN blinkit_order_items oi
ON o.order_id = oi.order_id
WHERE c.area IS NOT NULL
GROUP BY c.area,c.pincode
ORDER BY revenue DESC

--Top country with high revenue
SELECT c.country,SUM(oi.unit_price* oi.quantity) revenue
FROM customer_table c
JOIN blinkit_orders o
ON o.customer_id = c.customer_id
JOIN blinkit_order_items oi
ON o.order_id = oi.order_id
WHERE c.country IS NOT NULL
GROUP BY c.country
ORDER BY revenue DESC
